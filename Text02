--------------------------------------------------------------------------------------------------------------------------------------------

heidisql d드라이브에 넣어서
m or my tcp/ip
libmariadb.dll
localhost
12345
url.kr/xsb1yn   교수님 드라이브

show databases; // 데이터베이스 목록 호출
use info_1219; // 데이터베이스 접속
INSERT INTO subject VALUES (NULL,'KOR'); //서브젝트 테이블에 KOR 추가
INSERT INTO subject VALUES (NULL,'ENG');
INSERT INTO subject VALUES (NULL,'COM');
INSERT INTO subject VALUES (NULL,'EXCEL');
desc professor; //구조 호출
INSERT INTO professor VALUES (NULL, 'parkpro',39,1); //professor 테이블에 값 추가
INSERT INTO professor VALUES (NULL, 'kimpro',42,2);
INSERT INTO professor VALUES (NULL, 'baepro',52,3);
INSERT INTO professor VALUES (NULL, 'jenpro',60,4);
INSERT INTO professor VALUES (NULL, 'jenpro',60,6);  // 이것은 외래키로 묶여있어서 subjent 4까지라서 6이 에러
SELECT * FROM professor;
desc student; //학생테이블 구조 호출
INSERT INTO student VALUES (NULL,'hongi',21,2,1); //student 테이블 값 추가
INSERT INTO student VALUES (NULL,'baei',22,3,2);
INSERT INTO student VALUES (NULL,'joea',20,1,3);
INSERT INTO student VALUES (NULL,'sai',21,1,4);
INSERT INTO student VALUES (NULL,'parki',22,3,3);
INSERT INTO student VALUES (NULL,'pigo',20,1,1);
INSERT INTO student VALUES (NULL,'pupu',24,4,2);
INSERT INTO student VALUES (NULL,'popo',23,3,1);
SELECT * FROM student; // 학생테이블 호출
SELECT name,age FROM student WHERE name like 'p%'; //p로시작하는 학생의 이름과 나이출력
SELECT name,year FROM student WHERE name like 'p%' and name like 'p___';     //1.학생테이블에서 이름이 p시작하고 총 이름수가 4글자인 학생의 이름과 학년을 출력하시요.
SELECT name,age FROM student WHERE age between 20 and 22; // 2.학생테이블에서 나이가 20세이상부터 22세이하인 학생의 이름과 나이를 출력하시오. 단 between 연산자를 사용하세요
SELECT name,age FROM student WHERE age>=20 and age<=22; // between 없이 사용한 쿼리
SELECT count(*) as inwon FROM professor; //3. 전체교수 인원을 교수테이블에서 출력하시오 단, 출력을 as을 사용하여 inwon으로 출력하시오.
SELECT avg(age) as average FROM professor;// 4.교수의 평균 나이를 출력하시오 단 출력은AS를 사용하여 average로 출력하시오
SELECT name,age FROM student WHERE year>=2 ORDER BY age ASC;  // 5.학생의 학년이 2학년이상 학생의 이름과 나이를 출력하시오 단 나이를 기준으로 오름차순 정렬 하시오.
SELECT name,age,year FROM student WHERE year<=3 ORDER BY name DESC, age ASC; 
// 6.학생의 학년이 3학년 이하인 학생의 이름과 나이와 학년을 출력하시오 단 이름을 기준으로 내림차순 정렬하고, 이름이 같다면 두번째 기준 학년을 기준으로 오름차순 정렬하시오
SELECT s.name, j.name FROM student as s cross join subject as j; //#7. 학생이름과 학생이 수강하는 과목명을 출력하시오.
SELECT s.name, j.name FROM student as s cross join subject as j on j.num=s.subject; // join 쓸대 on은 WHERE 대신 쓰는것 !!
//8.교수 이름과 교수 테이블을 조인하여 교수 이름과 과목명을 출력하시오 단.JOIN을사용하고 AS를 사용하여 교수테이블은 p,
과목테이블은 j로 별칭을 주고 교수 이름을 기준으로 오름차순 정렬하시오.
->
SELECT p.name, j.name FROM professor AS join 
SELECT p.name, j.name FROM professor AS p join subject AS j on p.subject=j.num ORDER BY p.name ASC;
//9.학생테이블과 교수테이블을 조인하여 학생이 수강하는학생이름과 교수이름을 출력하시오. 단 JOIN 을 사용하고 교수테이블의
별칭은 p ,학생테이블 별칭은 s로 설정한후 출력시 학생 이름은AS를 상용하여 stu_name 교수이름은 AS를 사용하여 pro_name으로 출력하시오
SELECT s.name as stu_name,p.name as pro_name FROM student AS s join professor AS p on s.subject=p.subject;
SELECT a.name as stu_name,b.name as pro_name FROM student AS a join professor AS b on a.subject=b.subject; //앞 별칭은 보여주는것이고 뒷별칭은 코드를 쭐인거임!!!!!
//10.학생 테이블과 교수테이블과 과목테이블을 조인하여 학생이름,과목이름, 교수이름을 출력하시오
SELECT s.name, j.name, p.name FROM student s JOIN professor p JOIN subject j on s.subject=j.num and p.subject=j.num;
